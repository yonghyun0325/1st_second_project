<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.web.mapper.NoticeMapper">
<!-- namespace: XML 파일에서 내용의 구분을 위해서 사용 -->

<!-- 공지사항 목록 조회 -->
<select id="getNoticeList" resultType="NoticeVO">

	select * from tb_notice_board
		where nb_status = 'N'
		order by nb_idx desc

</select>

<!-- 공지사항 목록 조회 -->
<select id="getNoticeList2" resultType="NoticeVO">
	
	<choose>
	<when test="searchWord != null">
		<!-- 검색어가 있는 경우 -->
		select * from tb_notice_board
			where nb_status = 'N'
			
			<choose>
				<when test="searchField == 'title'">
					and nb_title like CONCAT('%',#{searchWord},'%')
				</when>
				<when test="searchField == 'writer'">
					and nb_writer like CONCAT('%',#{searchWord},'%')
				</when>
				<otherwise>
					and nb_content like CONCAT('%',#{searchWord},'%')
				</otherwise>
			</choose>
			order by nb_idx desc
			limit #{startNum}, 10
	</when>
	<otherwise>
	<!-- 검색어가 없는 경우 -->
		select * from tb_notice_board
			where nb_status = 'N'
			order by nb_idx desc
			limit #{startNum}, 10
		</otherwise>
		</choose>

</select>

<!-- 공지사항 총 게시물수 조회 -->
<select id="getTotalRows" resultType="_int">

	<choose>
		<when test="searchWord != null">
		<!-- 검색어가 있는 경우 -->
		
		select count(*) from tb_notice_board
			where nb_status = 'N'
		
			<choose>
				<when test="searchField == 'title'">
					and nb_title like CONCAT('%',#{searchWord},'%')
				</when>
				<when test="searchField == 'writer'">
					and nb_writer like CONCAT('%',#{searchWord},'%')
				</when>
				<otherwise>
					and nb_content like CONCAT('%',#{searchWord},'%')
				</otherwise>
			</choose>
			order by nb_idx desc
		</when>
		<otherwise>
		<!-- 검색어가 없는 경우 -->
		select count(*) from tb_notice_board
			where nb_status = 'N'
			order by nb_idx desc
			
		</otherwise>
	</choose>
	

</select>

<!-- 공지사항 등록 -->
<insert id="insertNotice" parameterType="noticeVO">
	
	insert into tb_notice_board (m_idx, nb_writer, nb_title, nb_content)
		values (#{m_idx}, #{nb_writer}, #{nb_title}, #{nb_content})


</insert>

<!-- 공지사항 테이블에서 공지번호 최고값 얻기 -->
<select id="getMaxNb_idx" resultType="_int">
	select max(nb_idx) from tb_notice_board
</select>

<!-- 공지사항 조회 -->

<select id="getNotice" parameterType="_int" resultType="noticeVO">

	select * from tb_notice_board
		where nb_idx = #{nb_idx}

</select>

<!-- 조회수 증가시키기 -->
<update id="updateReadCount" parameterType="_int">

	update tb_notice_board set read_cnt = read_cnt+1
		where nb_idx=#{nb_idx}
		
</update>

<!--  첨부파일 삭제  -->
<delete id="deleteAttached" parameterType="_int">

	delete from tb_notice_attached
		where na_idx = #{na_idx}
		
</delete>


<!-- 글수정 -->

<update id="updateNotice" parameterType="noticeVO">

	update tb_notice_board set nb_title=#{nb_title}, 
						nb_content=#{nb_content},
						update_date= now() 
			where nb_idx = #{nb_idx}

</update>

<!-- 글 삭제 -->
<update id="deleteNotice" parameterType="_int">
	update tb_notice_board set nb_status='Y', 
						update_date= now() 
			where nb_idx = #{nb_idx}
</update>




</mapper>
